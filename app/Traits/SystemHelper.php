<?php

namespace App\Traits;

trait SystemHelper
{
  public function calculateTotalCost(): float
  {
    $equipments = $this->equipments;
    $totalCost = 0;
    foreach ($equipments as $equipment) {
      $totalCost +=
        $equipment->item->price * $equipment->quantity;
    }
    return $totalCost;
  }

  public function calculateTotalEnergy(): float
  {
    $equipments = $this->equipments;
    $totalCost = 0;
    foreach ($equipments as $equipment) {
      if ($equipment->item->category === 'solar panel')
        $totalCost +=
          // $equipment->item->wattage * $equipment->quantity;
          190 * $equipment->quantity;
    }
    return $totalCost;
  }

  public function calculateROI(): float
    {
        // Step 1: Calculate total cost of the system
        $totalSystemCost = $this->calculateTotalCost();

        // Step 2: Calculate total energy generated by solar panels
        $totalEnergyGenerated = $this->calculateTotalEnergy();

        // Step 3: Calculate energy cost savings per unit
        // Assuming costPerUnitOfEnergy is in currency/unit
        // You can set this value based on your pricing structure
        $energyCostSavingsPerUnit = 1.83;

        // Step 4: Calculate ROI
        if ($totalSystemCost > 0) {
            $ROI = (($totalEnergyGenerated * $energyCostSavingsPerUnit) / $totalSystemCost) * 100;
            return $ROI;
        } else {
            // Handle division by zero or no cost scenario
            return 0.0;
        }
    }
}
